// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Xenko Shader Mixin Code Generator.
// To generate it yourself, please install Xenko.VisualStudio.Package .vsix
// and re-save the associated .xkfx.
// </auto-generated>

using System;
using Xenko.Core;
using Xenko.Rendering;
using Xenko.Graphics;
using Xenko.Shaders;
using Xenko.Core.Mathematics;
using Buffer = Xenko.Graphics.Buffer;

namespace Xenko.Rendering
{
    public static partial class WaterFlowMapShaderKeys
    {
        public static readonly ValueParameterKey<Color3> SunColor = ParameterKeys.NewValue<Color3>();
        public static readonly ValueParameterKey<Vector2> SkyTextureOffset = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<Vector3> CameraPosition = ParameterKeys.NewValue<Vector3>();
        public static readonly ValueParameterKey<Vector3> DirectionToLight = ParameterKeys.NewValue<Vector3>();
        public static readonly ValueParameterKey<Vector2> NormalPhase = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<Vector4> NormalOffsets = ParameterKeys.NewValue<Vector4>();
        public static readonly ValueParameterKey<Vector2> DiffusePhase = ParameterKeys.NewValue<Vector2>();
        public static readonly ValueParameterKey<Vector4> DiffuseOffsets = ParameterKeys.NewValue<Vector4>();
        public static readonly ValueParameterKey<float> NormalPulseReduction = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> DiffusePulseReduction = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> DisplacementSpeed = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> DisplacementAmplitude = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> WaterTransparency = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<float> TextureScale = ParameterKeys.NewValue<float>();
        public static readonly ValueParameterKey<int> UseCaustics = ParameterKeys.NewValue<int>();
        public static readonly ObjectParameterKey<Texture> SkyTexture = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> WaterFloorTexture = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> DiffuseTexture0 = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> DiffuseTexture1 = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> NormalTexture0 = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> NormalTexture1 = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> FlowMapTexture = ParameterKeys.NewObject<Texture>();
        public static readonly ObjectParameterKey<Texture> NoiseTexture = ParameterKeys.NewObject<Texture>();
    }
}
